#include "iGraphics.h"
#include <stdlib.h>
#include <time.h>
#define JUMP_LIMIT 200
using namespace std;
int a, b, p, w, h, bullet,s ,hb, jeep, p2;
float x = 0;
bool stand = true;
bool run = false;
bool runback = false;
float charPosX = 10;
float charY = 5;

const int jumpHeight = 100;
const int screenWidth = 600;
const int charWidth = 100;
const int p2Width = 200;
float carPosX = screenWidth;
float jeepPosX = screenWidth;
float p2X = screenWidth;
float heliX = screenWidth;
float heliWidth = 300;
float c1 = 0;
float c2 = 1000;
float carStopPos = 360;

float p2StopPos = 360;
float heliStop = 300;
const int carWidth = 300;
float wX = 1200;
bool jump = false;
bool jumpUp = false;
bool wShow = true;
int bulletX = 300;
int hbx = heliStop;
int hby = 40;
int cTime = 0;
int st = 0;
int st2 = 1000;

bool slide = false;


int j = 0;
int carA = 0;

const int cTime2 = 12000;
// Timer variables
int wTime = 0;
const int wTime2 = 3000;  // 20 seconds (in milliseconds)

bool bulletFired = false;  // Flag to control bullet firing
int btime = 1000;
int btime2 = 500000;
bool hbulletFired = false;
int hbtime = 0;
int hbtime2 = 2000;


float jeepX = screenWidth;
void checkCollisionW()
{
	
	if (wShow) // Check collision only if the water bottle is visible
	{
		// Check X-axis overlap (character width and water bottle width are considered)
		if (charPosX + charWidth >= wX && charPosX <= wX + 80) // X-axis collision
		{
			// Check Y-axis overlap (character height and water bottle height are considered)
			if (charY + 110 >= 140 && charY <= 140 + 80) // Y-axis collision
			{
				wShow = false;
				wX = screenWidth + 200;
				wTime = 0;
				
				
				
			}
		}
	}
}

void iDraw() {
	iClear();
	iShowImage(x, 0, screenWidth, 400, a);
	iShowImage(x + screenWidth, 0, screenWidth, 400, a);
	iShowImage(carPosX, 4, carWidth, 160, p);
	

	iShowImage(charPosX, charY, charWidth, 120, b);
	
	iShowImage(heliX, 300, heliWidth, 120, h);

	// Background scrolling
	x -= 0.05;
	if (x < -600) {
		x = 0;
	}

	if (heliX >= heliStop) {
		heliX -= 0.1;
	}
	else
	{
		heliX = heliStop;
	}
	if (heliX < 0) {
		heliX += 0.2; // helicopter moves right
		
	}

	
	
	if (heliX <= heliStop && hbtime >= hbtime2 && !hbulletFired && j>=2) {
		hbulletFired = true;  // Set the bullet fired flag
		hbx = heliX + rand() % 300;  // Adjust bullet position to align with helicopter
		hby = rand() % 300 + 200;  // Align the bullet Y position with the helicopter's Y position
		hbtime = 0;
		
		
		
    }

		
	

	if (hbulletFired) {
		iShowImage(hbx - 50, hby -(rand()%120), 50, 30, hb);
		hbx -= 0.3;  // Adjust the bullet speed
		hby -= 0.5;
		if (hbx < 5 || hby<5) {  // Reset the bullet once it goes off-screen
			hbulletFired = false;
		}
	}
	hbtime += 20;
	// Flying object appears after 20 seconds
	if (wTime >= wTime2 && wShow) {
		iShowImage(wX, 160, 80, 80, w);
		wX -= 0.1;  // Move the flying object
	}

	// Reset flying object's position once it goes off-screen
	if (wX < -80) {
		wX = screenWidth + 200;  // Reset position
		wTime = 0;  // Reset the timer for the next appearance
	}
	if (!wShow && wTime >= wTime2) {
		wShow = true;             // Make the water bottle visible again
		// Optionally, you can randomize the y-position or other attributes here
	}
	// Character movement logic
	if (run) {
		charPosX += 0.09;
		if (charPosX + charWidth >= screenWidth) {
			charPosX = screenWidth - charWidth;
		}
	}
	if (runback) {
		charPosX -= 0.09;
		if (charPosX <= 0) {
			charPosX = 0;
		}
	}

	
	if ( carPosX >= carStopPos ) {
		
		if (c1 >= c2)
		{
			carPosX -= 0.1;
		}

	}
	

	if (c1 >= c2 && btime > btime2 && !bulletFired) {
		bulletFired = true;  // Set the bullet fired flag
		bulletX = carPosX;
		btime = 0;


	}

	// Reset flying object's position once it goes off-screen
	if (bulletFired) {
		iShowImage(bulletX - 50, 50, 50, 30, bullet);
		bulletX -= 0.0000000005;
		if (bulletX<30)
		{
			bulletFired = false;


		}
	}
	btime += 100;

	if (cTime >= cTime2) {
		carPosX += 0.2;  // Move the flying object
		bulletX = false;

		iShowImage(p2X+1200, 4, carWidth, 160, p);
		p2X -= 0.5;

		if (p2X<-1.0 && carPosX > 1000 )
		{
			iShowImage(jeepX , 4, 120, 130, jeep);
			jeepX -= 0.3;
			if (jeepX <-120)
			{
				j++;
				if (j < 5)
				{
					jeepX = screenWidth;  // Reset jeep position to reappear

				}
				else
				{
					jeepX = -120;
				}
				
				
			}
			
		}
		

		
	
	
	
}
	

	
	

	// Jumping logic
	if (jump) {
		if (jumpUp) {
			charY += 0.08;
			if (charY >= jumpHeight) {
				jumpUp = false;
			}
		}
		else {
			charY -= 0.09;
			if (charY <= 20) {
				charY = 20;
				jump = false;
				jumpUp = false;
			}
		}
	}
	
	if (slide)
	{
		charY = 1;
		if (st >= st2)

		{
			slide = false;
			charY = 18;
			st = 0;
		}
		
	}
	checkCollisionW();
}

void change() {
	wTime += 20;
	cTime += 20;
	btime += 100;
	c1 += 20;
	st += 50;
	hbtime += 50;

}

void iMouseMove(int mx, int my) {}

void iPassiveMouseMove(int mx, int my) {}

void iMouse(int button, int state, int mx, int my) {
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {}

	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN) {}
}

void iKeyboard(unsigned char key) {
	if (key == 'd') {
		stand = false;
		run = true;
		runback = false;
	}
	if (key == 'a') {
		stand = false;
		run = false;
		runback = true;
	}
	if (key == 's' && !slide) {
		stand = false;
		run = false;
		runback = false;
		
		slide = true;
	}
	if (key == 'w' && !jump) {
		jump = true;
		jumpUp = true;
	}
}

void iSpecialKeyboard(unsigned char key) {
	if (key == GLUT_KEY_RIGHT) {
		run = true;
		runback = false;
	}
	if (key == GLUT_KEY_LEFT) {
		run = false;
		runback = true;
	}
	if (key == GLUT_KEY_UP) {
		jump = true;
		jumpUp = true;
	}
	if (key == GLUT_KEY_DOWN) {
		jump = false;
		jumpUp = false;
		stand = false;
		run = false;
		runback = false;

		slide = true;
	}
}

int main() {
	iInitialize(600, 400, "July 36th");

	a = iLoadImage("./images/du.jpg");
	b = iLoadImage("./images/student.jpg");
	p = iLoadImage("./images/police.jpg");
	w = iLoadImage("./images/water.png");
	h = iLoadImage("./images/police.jpg");
	bullet = iLoadImage("./images/bullet.png");
	hb = iLoadImage("./images/bullet.png");
	s = iLoadImage("./images/student.jpg");
	jeep = iLoadImage("./images/bike.jpg");
	p2 = iLoadImage("./images/police.jpg");

	iSetTimer(20, change);
	iStart();

	return 0;
}
